import React, { useEffect } from 'react';
import { useAuth } from '@/contexts/AuthContext';
import { useAdmin } from '@/contexts/AdminContext';
import { useNavigate } from 'react-router-dom';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Loader2, Shield, BookOpen, GraduationCap } from 'lucide-react';

const RoleBasedRedirect: React.FC = () => {
  // TEMPORAIREMENT D√âSACTIV√â POUR D√âBOGUER
  console.log('üîç RoleBasedRedirect - COMPOSANT D√âSACTIV√â');
  console.log('üîç RoleBasedRedirect - Current path:', window.location.pathname);
  
  // Ne jamais rediriger - juste afficher un message
  return (
    <div className="min-h-screen flex items-center justify-center">
      <div className="text-center">
        <h1 className="text-2xl font-bold mb-4">Dashboard</h1>
        <p className="text-gray-600">Vous √™tes sur la page dashboard</p>
        <p className="text-sm text-gray-500 mt-2">Path: {window.location.pathname}</p>
        <p className="text-sm text-gray-500 mt-2">Ce composant ne redirige plus</p>
        <p className="text-sm text-gray-500 mt-2">Si vous voyez ce message, le probl√®me ne vient pas d'ici</p>
        <p className="text-sm text-gray-500 mt-2">Si vous √™tes redirig√© vers /profile, le probl√®me vient d'ailleurs</p>
        <p className="text-sm text-gray-500 mt-2">V√©rifiez App.tsx pour les redirections par d√©faut</p>
        <p className="text-sm text-gray-500 mt-2">Si le probl√®me persiste, v√©rifiez AuthContext.tsx</p>
        <p className="text-sm text-gray-500 mt-2">Si le probl√®me persiste encore, v√©rifiez ProtectedRoute.tsx</p>
      </div>
    </div>
  );
  
  // Code original comment√©
  /*
  const { user, loading: authLoading } = useAuth();
  const { isAdmin, loading: adminLoading } = useAdmin();
  const navigate = useNavigate();

  // V√©rifier si on est sur /dashboard
  const currentPath = window.location.pathname;
  console.log('üîç RoleBasedRedirect - Current path:', currentPath);
  
  if (currentPath !== '/dashboard') {
    console.log('üîç RoleBasedRedirect - Pas sur /dashboard, retour null');
    return null;
  }

  useEffect(() => {
    console.log('üîç RoleBasedRedirect - useEffect d√©clench√©');
    if (!authLoading && !adminLoading) {
      if (!user) {
        console.log('üîç RoleBasedRedirect - Pas d\'utilisateur, redirection vers login');
        navigate('/login');
        return;
      }

      console.log('üîç RoleBasedRedirect - Redirection depuis /dashboard pour:', user.role);
      // D√©terminer le r√¥le et rediriger
      if (user.role === 'ADMIN' || isAdmin) {
        navigate('/simple-admin/dashboard');
      } else if (user.role === 'STUDENT') {
        navigate('/student/dashboard');
      } else if (user.role === 'TUTOR') {
        navigate('/profile');
      } else {
        navigate('/');
      }
    }
  }, [user, isAdmin, authLoading, adminLoading, navigate]);
  */

  if (authLoading || adminLoading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <Card className="w-96">
          <CardHeader>
            <CardTitle className="text-center flex items-center justify-center">
              <Loader2 className="h-6 w-6 mr-2 animate-spin" />
              Chargement...
            </CardTitle>
            <CardDescription className="text-center">
              D√©termination de votre r√¥le et redirection...
            </CardDescription>
          </CardHeader>
        </Card>
      </div>
    );
  }

  if (!user) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <Card className="w-96">
          <CardHeader>
            <CardTitle className="text-center">Acc√®s Refus√©</CardTitle>
            <CardDescription className="text-center">
              Vous devez √™tre connect√© pour acc√©der √† cette page.
            </CardDescription>
          </CardHeader>
          <CardContent className="text-center">
            <Button onClick={() => navigate('/login')}>
              Se connecter
            </Button>
          </CardContent>
        </Card>
      </div>
    );
  }

  // Interface de s√©lection de r√¥le (fallback)
  return (
    <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 to-purple-50">
      <Card className="w-full max-w-2xl">
        <CardHeader>
          <CardTitle className="text-center text-2xl">Choisissez votre tableau de bord</CardTitle>
          <CardDescription className="text-center">
            Bienvenue {user.firstName} ! S√©lectionnez l'interface qui correspond √† votre r√¥le.
          </CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            {/* √âtudiant */}
            <Button
              variant="outline"
              className="h-auto p-6 flex flex-col items-center space-y-3"
              onClick={() => navigate('/student/dashboard')}
            >
              <GraduationCap className="h-8 w-8 text-blue-600" />
              <div className="text-center">
                <div className="font-semibold">√âtudiant</div>
                <div className="text-sm text-muted-foreground">
                  Flashcards, progression, tuteurs
                </div>
              </div>
            </Button>

            {/* Tuteur */}
            <Button
              variant="outline"
              className="h-auto p-6 flex flex-col items-center space-y-3"
              onClick={() => navigate('/profile')}
            >
              <BookOpen className="h-8 w-8 text-green-600" />
              <div className="text-center">
                <div className="font-semibold">Tuteur</div>
                <div className="text-sm text-muted-foreground">
                  Sessions, √©tudiants, performance
                </div>
              </div>
            </Button>

            {/* Admin */}
            <Button
              variant="outline"
              className="h-auto p-6 flex flex-col items-center space-y-3"
              onClick={() => navigate('/simple-admin/dashboard')}
            >
              <Shield className="h-8 w-8 text-purple-600" />
              <div className="text-center">
                <div className="font-semibold">Administrateur</div>
                <div className="text-sm text-muted-foreground">
                  Gestion, mod√©ration, analytics
                </div>
              </div>
            </Button>
          </div>

          <div className="text-center pt-4">
            <Button variant="ghost" onClick={() => navigate('/')}>
              Retour √† l'accueil
            </Button>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default RoleBasedRedirect;




